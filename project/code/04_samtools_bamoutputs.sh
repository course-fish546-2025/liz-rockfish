#!/bin/bash
#SBATCH --job-name=samtools_rf_freshrun060625
#SBATCH --account=coenv
#SBATCH --partition=cpu-g2
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=32
## Walltime (days-hours:minutes:seconds format)
#SBATCH --time=2-10:00:00
## Memory per node
#SBATCH --mem=300G
#SBATCH --mail-type=ALL
#SBATCH --mail-user=lizboggs@uw.edu

### This script runs samtools subcommands to generate BAM/BAM sorted files from SAM files (generated by bowtie2) ###

##### ENVIRONMENT SETUP #####################
cd /mmfs1/gscratch/scrubbed/lizboggs
mkdir -p bam_freshrun060625

## Specify the directory containing data
DATADIR=/mmfs1/gscratch/scrubbed/lizboggs/sam_freshrun060625 # directory with sam files
SUFFIX1=.sam # file suffix
OUTDIR=/mmfs1/gscratch/scrubbed/lizboggs/bam_freshrun060625 # where to store output files
MYCONDA=/mmfs1/gscratch/merlab/software/miniconda3/etc/profile.d/conda.sh # path to conda installation on our Klone node - do NOT change this
MYENV=samtools_env # name of the conda environment containing samtools software
THREADS=$SLURM_CPUS_PER_TASK

## Start with clean slate
module purge

## Source command will allow us to execute commands from a file in the current shell
source $MYCONDA

## Activate the conda environment
conda activate $MYENV

###################################################################################################################
## Move into the working directory and run script
cd $DATADIR

## Run samtools commands
for MYSAMPLEFILE in *$SUFFIX1
do
    echo $MYSAMPLEFILE
    MYBASE=`basename --suffix=$SUFFIX1 $MYSAMPLEFILE`
    samtools view -@ $THREADS -bS -F 4 $MYBASE'.sam' > $MYBASE'.bam'
    samtools view -@ $THREADS -h -q 20 $MYBASE'.bam' | samtools view -@ $THREADS -buS - | samtools sort -@ $THREADS -o $MYBASE'_minq20_sorted.bam'
    samtools index $MYBASE'_minq20_sorted.bam'
done

## Flag explanations for samtools view:
## -b       output BAM
## -h       include header in SAM output
## -q INT   only include reads with mapping quality >= INT [0]
## -F INT   only include reads with none of the bits set in INT set in FLAG [0] (aka when this is set to 4, you remove unmapped reads)

# Move all of the bam files to the output directory
mv *'.bam' $OUTDIR
mv *'.bai' $OUTDIR

## Deactivate the conda environment
conda deactivate